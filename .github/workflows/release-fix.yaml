name: Release fix

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release"
      issue-number:
        type: number
        required: true
        description: "Issue number id"

jobs:
  run_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test]
        node_version: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: '${{ matrix.node_version }}'
      - name: Install dependencies
        run: npm ci
      - name: Run ${{ matrix.task }}
        run: npm run ${{ matrix.task }}
  build_and_push_fix_docker:
    needs: [run_checks]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.7
        with:
          ref: release/${{ inputs.version }}
      - name: Login to Yandex Container Registry
        run: |
            docker login \
              --username oauth \
              --password ${{ secrets.YANDEX_OAUTH }} \
              cr.yandex
      - name: Build and Push Docker image fix
        run: |
          docker build -t cr.yandex/${{ secrets.CR_ID }}/app:${{ inputs.version }}_fix${{ github.run_number }} .
          docker push cr.yandex/${{ secrets.CR_ID }}/app:${{ inputs.version }}_fix${{ github.run_number }}

      - name: Build and Push Docker image Latest
        run: |
          docker build -t cr.yandex/${{ secrets.CR_ID }}/app:${{ inputs.version }}_latest .
          docker push cr.yandex/${{ secrets.CR_ID }}/app:${{ inputs.version }}_latest
  tagging_release_fix:
    needs: [run_checks]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.7
        with:
          ref: release/${{ inputs.version }}

      - name: Create and Push Tag
        uses: EndBug/latest-tag@latest
        with:
          ref: ${{ inputs.version }}_fix${{ github.run_number }}

  issue_comment_addition:
    runs-on: ubuntu-latest
    needs: [run_checks]
    steps:
      - name: Set current date
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Fetch all tags
        run: git fetch --tags
      - name: Get previous tag
        id: prev_tag
        run: echo "PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_ENV
      - name: Get commit list
        id: commit_list
        run: |
          git log ${{ env.PREV_TAG }}..HEAD --oneline > commits.txt
          echo "COMMITS=$(cat commits.txt)" >> $GITHUB_ENV
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{inputs.issue-number}}
          body: |
            **Release ${{ inputs.version }} fix**:

            - Date: ${{env.NOW}}
            - Author: ${{ github.triggering_actor }}
            - Version: ${{ github.run_number }}
            - Commits: |
                ${{ env.COMMITS }}
            - YC Docker: cr.yandex/${{secrets.CR_ID}}/app:${{ inputs.version }}_fix${{ github.run_number }}
